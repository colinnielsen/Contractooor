/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AgreementArbitrator,
  AgreementArbitratorInterface,
} from "../AgreementArbitrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sablier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_agreementSingleton",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INCOMPATIBLE_TOKEN",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_TERM_LENGTH",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_CLIENT",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_SENDER_OR_CLIENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "agreementNonce",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractooorAgreement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    name: "AgreementInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "agreementHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "agreementNonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "targetEndTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "streamToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStreamedTokens",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "atWillDays",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "cureTimeDays",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "legalCompulsion",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "moralTurpitude",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "bankruptcyDissolutionInsolvency",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "counterpartyMalfeasance",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lostControlOfPrivateKeys",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TerminationClauses",
        name: "terminationClauses",
        type: "tuple",
      },
    ],
    name: "AgreementProposed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "agreementNonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "termLength",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "streamToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalStreamedTokens",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "atWillDays",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "cureTimeDays",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "legalCompulsion",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "moralTurpitude",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "bankruptcyDissolutionInsolvency",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "counterpartyMalfeasance",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lostControlOfPrivateKeys",
            type: "bool",
          },
        ],
        internalType: "struct TerminationClauses",
        name: "terminationClauses",
        type: "tuple",
      },
    ],
    name: "agreeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signingParty",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "agreementNonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "termLength",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "streamToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalStreamedTokens",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "atWillDays",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "cureTimeDays",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "legalCompulsion",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "moralTurpitude",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "bankruptcyDissolutionInsolvency",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "counterpartyMalfeasance",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lostControlOfPrivateKeys",
            type: "bool",
          },
        ],
        internalType: "struct TerminationClauses",
        name: "terminationClauses",
        type: "tuple",
      },
    ],
    name: "getAgreementHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "sablier",
    outputs: [
      {
        internalType: "contract ISablier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type AgreementArbitratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgreementArbitratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgreementArbitrator__factory extends ContractFactory {
  constructor(...args: AgreementArbitratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _sablier: PromiseOrValue<string>,
    _agreementSingleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AgreementArbitrator> {
    return super.deploy(
      _sablier,
      _agreementSingleton,
      overrides || {}
    ) as Promise<AgreementArbitrator>;
  }
  override getDeployTransaction(
    _sablier: PromiseOrValue<string>,
    _agreementSingleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sablier,
      _agreementSingleton,
      overrides || {}
    );
  }
  override attach(address: string): AgreementArbitrator {
    return super.attach(address) as AgreementArbitrator;
  }
  override connect(signer: Signer): AgreementArbitrator__factory {
    return super.connect(signer) as AgreementArbitrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgreementArbitratorInterface {
    return new utils.Interface(_abi) as AgreementArbitratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AgreementArbitrator {
    return new Contract(address, _abi, signerOrProvider) as AgreementArbitrator;
  }
}
