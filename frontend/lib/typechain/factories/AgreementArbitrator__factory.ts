/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AgreementArbitrator,
  AgreementArbitratorInterface,
} from "../AgreementArbitrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sablier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_agreementSingleton",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INCOMPATIBLE_TOKEN",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_TERM_LENGTH",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_CLIENT",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_SENDER_OR_CLIENT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "agreementGUID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractooorAgreement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "streamId",
        type: "uint256",
      },
    ],
    name: "AgreementInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "agreementGUID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "targetEndTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "streamToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStreamedTokens",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "atWillDays",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "cureTimeDays",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "legalCompulsion",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "moralTurpitude",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "bankruptcyDissolutionInsolvency",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "counterpartyMalfeasance",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lostControlOfPrivateKeys",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct TerminationClauses",
        name: "terminationClauses",
        type: "tuple",
      },
    ],
    name: "AgreementProposed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "termLength",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "streamToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalStreamedTokens",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "atWillDays",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "cureTimeDays",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "legalCompulsion",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "moralTurpitude",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "bankruptcyDissolutionInsolvency",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "counterpartyMalfeasance",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lostControlOfPrivateKeys",
            type: "bool",
          },
        ],
        internalType: "struct TerminationClauses",
        name: "terminationClauses",
        type: "tuple",
      },
    ],
    name: "agreeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sablier",
    outputs: [
      {
        internalType: "contract ISablier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e99380380610e9983398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610ddb806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063482879aa1461003b5780637b3e0a1f1461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007d6100783660046108e6565b61007f565b005b336001600160a01b038916148015906100a15750336001600160a01b03881614155b156100bf5760405163465a13e960e01b815260040160405180910390fd5b8363ffffffff166000036100e657604051637397393160e11b815260040160405180910390fd5b600089898989898989898960405160200161010999989796959493929190610aa8565b6040516020818303038152906040528051906020012090506000896001600160a01b0316336001600160a01b0316146101425789610144565b885b60008381526002602090815260408083206001600160a01b038516845290915290205490915060ff1661021f576001600260008481526020019081526020016000206000336001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550886001600160a01b03168a6001600160a01b0316837f6f92c94de9d9a29ce2f0b99092f2920fe837d4a7b81f83b6338be1c94a632c568e8c8c8c8c8c8c6040516102109796959493929190610b16565b60405180910390a450506104c5565b60008281526002602090815260408083206001600160a01b03808616855292528220805460ff19169055600154169061025882856104d0565b90506102818b8d61026f63ffffffff8c168a610b70565b6001600160a01b038b16929190610535565b6102a08b8261029663ffffffff8c168a610b70565b61026f908a610b92565b6001600160a01b03808216906102b890841686610595565b6001600160a01b0316146102ce576102ce610bb3565b60006040518061014001604052808e6001600160a01b031681526020018d6001600160a01b0316815260200187600001602081019061030d9190610bc9565b61ffff1681526020018760200160208101906103299190610bc9565b61ffff1681526020016103426060890160408a01610be4565b151581526020016103596080890160608a01610be4565b1515815260200161037060a0890160808a01610be4565b1515815260200161038760c0890160a08a01610be4565b1515815260200161039e60e0890160c08a01610be4565b151581526020018c8c8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508054929350916001600160a01b03808616925063783ca77691168b61040863ffffffff8f168d610b70565b610412908d610b92565b8e876040518663ffffffff1660e01b8152600401610434959493929190610c58565b6020604051808303816000875af1158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610d40565b604080516001600160a01b03861681526020810183905291925087917f8af10d860569c4e095d82e5b22c9607d2361fa250b60f5d31c6f71523d2f8692910160405180910390a25050505050505b505050505050505050565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015260148101839052733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c820120607882015260556043909101206000905b90505b92915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261058f908590610637565b50505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b03811661052f5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064015b60405180910390fd5b600061068c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661070e9092919063ffffffff16565b80519091501561070957808060200190518101906106aa9190610d59565b6107095760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161062e565b505050565b606061071d8484600085610725565b949350505050565b6060824710156107865760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161062e565b600080866001600160a01b031685876040516107a29190610d76565b60006040518083038185875af1925050503d80600081146107df576040519150601f19603f3d011682016040523d82523d6000602084013e6107e4565b606091505b50915091506107f587838387610800565b979650505050505050565b6060831561086f578251600003610868576001600160a01b0385163b6108685760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161062e565b508161071d565b61071d83838151156108845781518083602001fd5b8060405162461bcd60e51b815260040161062e9190610d92565b80356001600160a01b03811681146108b557600080fd5b919050565b803563ffffffff811681146108b557600080fd5b600060e082840312156108e057600080fd5b50919050565b60008060008060008060008060006101c08a8c03121561090557600080fd5b8935985061091560208b0161089e565b975061092360408b0161089e565b965060608a013567ffffffffffffffff8082111561094057600080fd5b818c0191508c601f83011261095457600080fd5b81358181111561096357600080fd5b8d602082850101111561097557600080fd5b60208301985080975050505061098d60808b016108ba565b935061099b60a08b0161089e565b925060c08a013591506109b18b60e08c016108ce565b90509295985092959850929598565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b803561ffff811681146108b557600080fd5b8015158114610a0957600080fd5b50565b80356108b5816109fb565b61ffff80610a24836109e9565b16835280610a34602084016109e9565b166020840152506040810135610a49816109fb565b151560408301526060810135610a5e816109fb565b151560608301526080810135610a73816109fb565b1515608083015260a0810135610a88816109fb565b151560a0830152610a9b60c08201610a0c565b80151560c0840152505050565b8981526001600160a01b03898116602083015288811660408301526101c060608301819052600091610add8483018a8c6109c0565b925063ffffffff8816608085015280871660a085015250508360c0830152610b0860e0830184610a17565b9a9950505050505050505050565b6000610180898352806020840152610b31818401898b6109c0565b63ffffffff881660408501526001600160a01b0387166060850152608084018690529150610b64905060a0830184610a17565b98975050505050505050565b600082610b8d57634e487b7160e01b600052601260045260246000fd5b500690565b8181038181111561052f57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b600060208284031215610bdb57600080fd5b61052c826109e9565b600060208284031215610bf657600080fd5b8135610c01816109fb565b9392505050565b60005b83811015610c23578181015183820152602001610c0b565b50506000910152565b60008151808452610c44816020860160208601610c08565b601f01601f19169290920160200192915050565b6001600160a01b03868116825285811660208301526040820185905263ffffffff8416606083015260a060808301819052835190911690820152600060208301516001600160a01b03811660c084015250604083015161ffff811660e0840152506060830151610100610cd08185018361ffff169052565b60808501519150610120610ce78186018415159052565b60a08601519250610140610cfe8187018515159052565b60c0870151151561016087015260e087015115156101808701529186015115156101a08601528501516101c08501919091529050610b646101e0840182610c2c565b600060208284031215610d5257600080fd5b5051919050565b600060208284031215610d6b57600080fd5b8151610c01816109fb565b60008251610d88818460208701610c08565b9190910192915050565b60208152600061052c6020830184610c2c56fea26469706673582212209584b6d81732b0a60848488d4cc782165d0e2082073cf0996139a62d0c73842364736f6c63430008110033";

type AgreementArbitratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgreementArbitratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgreementArbitrator__factory extends ContractFactory {
  constructor(...args: AgreementArbitratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _sablier: PromiseOrValue<string>,
    _agreementSingleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AgreementArbitrator> {
    return super.deploy(
      _sablier,
      _agreementSingleton,
      overrides || {}
    ) as Promise<AgreementArbitrator>;
  }
  override getDeployTransaction(
    _sablier: PromiseOrValue<string>,
    _agreementSingleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sablier,
      _agreementSingleton,
      overrides || {}
    );
  }
  override attach(address: string): AgreementArbitrator {
    return super.attach(address) as AgreementArbitrator;
  }
  override connect(signer: Signer): AgreementArbitrator__factory {
    return super.connect(signer) as AgreementArbitrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgreementArbitratorInterface {
    return new utils.Interface(_abi) as AgreementArbitratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AgreementArbitrator {
    return new Contract(address, _abi, signerOrProvider) as AgreementArbitrator;
  }
}
