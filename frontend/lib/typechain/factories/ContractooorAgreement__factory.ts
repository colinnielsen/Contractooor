/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ContractooorAgreement,
  ContractooorAgreementInterface,
} from "../ContractooorAgreement";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CURE_TIME_NOT_MET",
    type: "error",
  },
  {
    inputs: [],
    name: "INCOMPATIBLE_TOKEN",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_END_TIME",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_AUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_CLIENT",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_CLIENT_OR_SERVICE_PROVIDER",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_RECEIVER",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_SERVICE_PROVIDER",
    type: "error",
  },
  {
    inputs: [],
    name: "NO_BREACH_NOTICE_ISSUED",
    type: "error",
  },
  {
    inputs: [],
    name: "RAGE_TERMINATION_NOT_ALLOWED",
    type: "error",
  },
  {
    inputs: [],
    name: "STREAM_CANCELLATION_FAILED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "terminator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum TerminationReason",
        name: "reason",
        type: "uint8",
      },
    ],
    name: "AgreementTerminated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "terminator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "terminationInfo",
        type: "string",
      },
      {
        indexed: true,
        internalType: "enum TerminationReason",
        name: "reason",
        type: "uint8",
      },
    ],
    name: "RageTermination",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "information",
        type: "string",
      },
      {
        indexed: true,
        internalType: "enum TerminationReason",
        name: "initialTerminationReason",
        type: "uint8",
      },
    ],
    name: "TerminationProposalDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "terminationInfo",
        type: "string",
      },
      {
        indexed: true,
        internalType: "enum TerminationReason",
        name: "reason",
        type: "uint8",
      },
    ],
    name: "TerminationProposed",
    type: "event",
  },
  {
    inputs: [],
    name: "agreement",
    outputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "atWillDays",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "cureTimeDays",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "legalCompulsion",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "moralTurpitude",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "bankruptcyDissolutionInsolvency",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "counterpartyMalfeasance",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "lostControlOfPrivateKeys",
        type: "bool",
      },
      {
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "atWillTerminationTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "streamToken",
        type: "address",
      },
    ],
    name: "emergencyRecoverTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISablier",
        name: "_sablier",
        type: "address",
      },
      {
        internalType: "address",
        name: "streamToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokensToStream",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termLength",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "provider",
            type: "address",
          },
          {
            internalType: "address",
            name: "client",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "atWillDays",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "cureTimeDays",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "legalCompulsion",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "moralTurpitude",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "bankruptcyDissolutionInsolvency",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "counterpartyMalfeasance",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "lostControlOfPrivateKeys",
            type: "bool",
          },
          {
            internalType: "string",
            name: "contractURI",
            type: "string",
          },
        ],
        internalType: "struct Agreement",
        name: "_agreement",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "uint256",
        name: "_streamId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cureInfo",
        type: "string",
      },
    ],
    name: "issueNoticeOfCure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "breachInfo",
        type: "string",
      },
    ],
    name: "issueNoticeOfMaterialBreach",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "terminationInfo",
        type: "string",
      },
    ],
    name: "issueNoticeOfTermination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "materialBreachTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mutualConsentTerminationId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TerminationReason",
        name: "reason",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "terminationInfo",
        type: "string",
      },
    ],
    name: "rageTerminate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "streamId",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terminateAtWill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "terminateByMaterialBreach",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "terminationInfo",
        type: "string",
      },
    ],
    name: "terminateByMutualConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timesContractBreached",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "withdrawalReason",
        type: "string",
      },
    ],
    name: "withdrawNoticeOfMaterialBreach",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611afa806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637a4506fa11610097578063ab25712811610066578063ab2571281461020e578063b062ad9014610216578063e99e13a014610229578063f4408e4b1461023257600080fd5b80637a4506fa146101cc5780637db3a946146101d55780639fd6ab10146101f3578063aa5074c11461020657600080fd5b806351ce84c9116100d357806351ce84c9146101735780635bda43bb146101865780637555dec9146101a6578063783ca776146101b957600080fd5b80631dd954691461010557806321a32f5c1461011a578063225e0b621461014d57806337bb723614610160575b600080fd5b610118610113366004611339565b61025d565b005b61013a610128366004611339565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b61011861015b366004611400565b6102e5565b61011861016e366004611400565b610347565b610118610181366004611435565b61040e565b61013a610194366004611339565b60076020526000908152604090205481565b6101186101b4366004611400565b6106fe565b61013a6101c7366004611489565b6107ae565b61013a60055481565b6101dd610a44565b6040516101449a99989796959493929190611557565b610118610201366004611400565b610b3b565b610118610b5d565b610118610bd7565b610118610224366004611400565b610c72565b61013a60085481565b600154610245906001600160601b031681565b6040516001600160601b039091168152602001610144565b6003546040516370a0823160e01b81523060048201526102e2916001600160a01b0390811691908416906370a0823190602401602060405180830381865afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d191906115d1565b6001600160a01b0384169190610cc6565b50565b6102ed610d18565b5033600090815260076020526040902042905560015b336001600160a01b03167fa9a6e5ae95df64d6ac513ac0e12ca8b1484cd7d4219296591019622afff108c38360405161033c9190611600565b60405180910390a350565b6000610351610d18565b905060008282604051602001610368929190611613565b6040516020818303038152906040528051906020012090508060055403610398576103936000610ed4565b505050565b82336040516020016103ab929190611613565b60408051601f1981840301815291905280516020909101206005556000336001600160a01b03167fa9a6e5ae95df64d6ac513ac0e12ca8b1484cd7d4219296591019622afff108c3856040516104019190611600565b60405180910390a3505050565b610416610d18565b506040805161014081018252600280546001600160a01b039081168352600354908116602084015261ffff600160a01b8204811694840194909452600160b01b8104909316606083015260ff600160c01b8404811615156080840152600160c81b84048116151560a0840152600160d01b84048116151560c0840152600160d81b84048116151560e0840152600160e01b909304909216151561010082015260048054600093916101208401916104cc9061163d565b80601f01602080910402602001604051908101604052809291908181526020018280546104f89061163d565b80156105455780601f1061051a57610100808354040283529160200191610545565b820191906000526020600020905b81548152906001019060200180831161052857829003601f168201915b50505050508152505090506003836009811115610564576105646115ea565b108061058e5750600383600981111561057f5761057f6115ea565b14801561058e57508060800151155b806105b7575060048360098111156105a8576105a86115ea565b1480156105b757508060a00151155b806105e0575060058360098111156105d1576105d16115ea565b1480156105e057508060c00151155b80610609575060068360098111156105fa576105fa6115ea565b14801561060957508060c00151155b8061063257506007836009811115610623576106236115ea565b14801561063257508060c00151155b8061065b5750600883600981111561064c5761064c6115ea565b14801561065b57508060e00151155b8061068557506009836009811115610675576106756115ea565b1480156106855750806101000151155b156106a25760405162bb9e4360e21b815260040160405180910390fd5b8260098111156106b4576106b46115ea565b336001600160a01b03167fecb6600657533e800d2e107bd9aede13bf8aab55ce3c0acc4cc7b3a0c1ba49ac846040516106ed9190611600565b60405180910390a361039383610ed4565b6000610708610d18565b6001600160a01b03811660009081526007602052604081205491925081900361074457604051632fd8ce4360e11b815260040160405180910390fd5b6001600160a01b0382166000908152600760205260408120819055600880549161076d8361168d565b9091555060019050336001600160a01b03167f4fb47628e603575307182a7f1dc425502df116678fefce4a8ebdd2d25105a3e5856040516104019190611600565b60008054610100900460ff16158080156107cf5750600054600160ff909116105b806107e95750303b1580156107e9575060005460ff166001145b6108515760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610874576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b038a16021790558260026108a38282611858565b505060405163095ea7b360e01b81526001600160a01b0388811660048301526024820187905287169063095ea7b3906044016020604051808303816000875af11580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091891906119e5565b506000546201000090046001600160a01b031663cc1b4bf661093d6020860186611339565b87894261094a8a82611a02565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015260248101949094529390911660448301526064820152608481019190915260a4016020604051808303816000875af11580156109ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d291906115d1565b600180546bffffffffffffffffffffffff19166001600160601b03831617905591508015610a3a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5095945050505050565b60028054600354600480546001600160a01b03938416949383169361ffff600160a01b8504811694600160b01b81049091169360ff600160c01b8304811694600160c81b8404821694600160d01b8504831694600160d81b8104841694600160e01b909104909316929091610ab89061163d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae49061163d565b8015610b315780601f10610b0657610100808354040283529160200191610b31565b820191906000526020600020905b815481529060010190602001808311610b1457829003601f168201915b505050505090508a565b610b43610d18565b503360009081526006602052604090204290556002610303565b33600090815260066020526040902054801580610b9f57506003548190610b9290600160a01b900461ffff1662015180611a15565b610b9c9190611a02565b42105b15610bbd5760405163192b4abb60e21b815260040160405180910390fd5b336000908152600660205260408120556102e26002610ed4565b610bdf610d18565b5033600090815260076020526040812054908115801590610c2557506003548290610c1890600160b01b900461ffff1662015180611a15565b610c229190611a02565b42115b9050801580610c3657506003600854105b15610c545760405163192b4abb60e21b815260040160405180910390fd5b33600090815260076020526040812055610c6e6001610ed4565b5050565b610c7a610d18565b50336000908152600760205260408120556001336001600160a01b03167f4fb47628e603575307182a7f1dc425502df116678fefce4a8ebdd2d25105a3e58360405161033c9190611600565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103939084906110c2565b6040805161014081018252600280546001600160a01b039081168352600354908116602084015261ffff600160a01b8204811694840194909452600160b01b8104909316606083015260ff600160c01b8404811615156080840152600160c81b84048116151560a0840152600160d01b84048116151560c0840152600160d81b84048116151560e0840152600160e01b909304909216151561010082015260048054600093849392909161012084019190610dd29061163d565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfe9061163d565b8015610e4b5780601f10610e2057610100808354040283529160200191610e4b565b820191906000526020600020905b815481529060010190602001808311610e2e57829003601f168201915b505050505081525050905080602001516001600160a01b0316336001600160a01b031614158015610e86575080516001600160a01b03163314155b15610ea45760405163c951910560e01b815260040160405180910390fd5b80602001516001600160a01b0316336001600160a01b031614610ecb578060200151610ece565b80515b91505090565b6001546000805460405163894e9a0d60e01b81526001600160601b039093166004840181905292620100009091046001600160a01b03169063894e9a0d9060240161010060405180830381865afa158015610f33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f579190611a2c565b505060008054604051636db9241b60e01b8152600481018b90529498509096506201000090046001600160a01b03169450636db9241b935050602490910190506020604051808303816000875af1158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda91906119e5565b905080610ffa576040516336c835bd60e21b815260040160405180910390fd5b6003546040516370a0823160e01b815230600482015261107f916001600160a01b0390811691908516906370a0823190602401602060405180830381865afa15801561104a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106e91906115d1565b6001600160a01b0385169190610cc6565b836009811115611091576110916115ea565b60405133907f9bac383fcb2d1c240bed97b62ae7df2cfb0d076126078c6d8ffaf5c1b2d1d0c490600090a350505050565b6000611117826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111949092919063ffffffff16565b805190915015610393578080602001905181019061113591906119e5565b6103935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610848565b60606111a384846000856111ab565b949350505050565b60608247101561120c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610848565b600080866001600160a01b031685876040516112289190611aa8565b60006040518083038185875af1925050503d8060008114611265576040519150601f19603f3d011682016040523d82523d6000602084013e61126a565b606091505b509150915061127b87838387611286565b979650505050505050565b606083156112f55782516000036112ee576001600160a01b0385163b6112ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610848565b50816111a3565b6111a3838381511561130a5781518083602001fd5b8060405162461bcd60e51b81526004016108489190611600565b6001600160a01b03811681146102e257600080fd5b60006020828403121561134b57600080fd5b813561135681611324565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261138457600080fd5b813567ffffffffffffffff8082111561139f5761139f61135d565b604051601f8301601f19908116603f011681019082821181831017156113c7576113c761135d565b816040528381528660208588010111156113e057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561141257600080fd5b813567ffffffffffffffff81111561142957600080fd5b6111a384828501611373565b6000806040838503121561144857600080fd5b8235600a811061145757600080fd5b9150602083013567ffffffffffffffff81111561147357600080fd5b61147f85828601611373565b9150509250929050565b600080600080600060a086880312156114a157600080fd5b85356114ac81611324565b945060208601356114bc81611324565b93506040860135925060608601359150608086013567ffffffffffffffff8111156114e657600080fd5b860161014081890312156114f957600080fd5b809150509295509295909350565b60005b8381101561152257818101518382015260200161150a565b50506000910152565b60008151808452611543816020860160208601611507565b601f01601f19169290920160200192915050565b6001600160a01b038b811682528a16602082015261ffff898116604083015288166060820152861515608082015285151560a082015284151560c082015283151560e082015282151561010082015261014061012082018190526000906115c08382018561152b565b9d9c50505050505050505050505050565b6000602082840312156115e357600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b602081526000611356602083018461152b565b604081526000611626604083018561152b565b905060018060a01b03831660208301529392505050565b600181811c9082168061165157607f821691505b60208210810361167157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161169f5761169f611677565b5060010190565b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000813561ffff811681146116da57600080fd5b92915050565b80151581146102e257600080fd5b600081356116da816116e0565b6000808335601e1984360301811261171257600080fd5b83018035915067ffffffffffffffff82111561172d57600080fd5b60200191503681900382131561174257600080fd5b9250929050565b601f82111561039357600081815260208120601f850160051c810160208610156117705750805b601f850160051c820191505b8181101561178f5782815560010161177c565b505050505050565b67ffffffffffffffff8311156117af576117af61135d565b6117c3836117bd835461163d565b83611749565b6000601f8411600181146117f757600085156117df5750838201355b600019600387901b1c1916600186901b178355611851565b600083815260209020601f19861690835b828110156118285786850135825560209485019460019092019101611808565b50868210156118455760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813561186381611324565b61186d81836116a6565b5060018101602083013561188081611324565b61188a81836116a6565b50611897604084016116c6565b815461ffff60a01b191660a09190911b61ffff60a01b161781556118e06118c0606085016116c6565b82805461ffff60b01b191660b09290921b61ffff60b01b16919091179055565b61190d6118ef608085016116ee565b82805460ff60c01b191691151560c01b60ff60c01b16919091179055565b61193a61191c60a085016116ee565b82805460ff60c81b191691151560c81b60ff60c81b16919091179055565b61196761194960c085016116ee565b82805460ff60d01b191691151560d01b60ff60d01b16919091179055565b61199461197660e085016116ee565b82805460ff60d81b191691151560d81b60ff60d81b16919091179055565b6119c26119a461010085016116ee565b82805460ff60e01b191691151560e01b60ff60e01b16919091179055565b506119d16101208301836116fb565b6119df818360028601611797565b50505050565b6000602082840312156119f757600080fd5b8151611356816116e0565b808201808211156116da576116da611677565b80820281158282048414176116da576116da611677565b600080600080600080600080610100898b031215611a4957600080fd5b8851611a5481611324565b60208a0151909850611a6581611324565b60408a015160608b01519198509650611a7d81611324565b60808a015160a08b015160c08c015160e0909c01519a9d999c50979a91999098919650945092505050565b60008251611aba818460208701611507565b919091019291505056fea2646970667358221220556a4955432c5b5c2768e635e2b13e5dc85f76ac241acd805ec1aadf1f84874c64736f6c63430008140033";

type ContractooorAgreementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractooorAgreementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractooorAgreement__factory extends ContractFactory {
  constructor(...args: ContractooorAgreementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractooorAgreement> {
    return super.deploy(overrides || {}) as Promise<ContractooorAgreement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractooorAgreement {
    return super.attach(address) as ContractooorAgreement;
  }
  override connect(signer: Signer): ContractooorAgreement__factory {
    return super.connect(signer) as ContractooorAgreement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractooorAgreementInterface {
    return new utils.Interface(_abi) as ContractooorAgreementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractooorAgreement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ContractooorAgreement;
  }
}
